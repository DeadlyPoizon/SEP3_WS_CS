syntax = "proto3";

package GRPC.bruger;

message Bruger{
  string username = 1;
  string password = 2;
  int32 depotID = 3;
  double saldo = 4;
}

message BrugerResponse{
  bool response = 1;
}

message BrugerRequest{
  repeated Bruger bruger = 1;
  string param = 2;
}

message Aktie{
  string navn = 1;
  string firma = 2;
  double pris = 3;
  double high = 4;
  double low = 5;
}

message AktieRequest{
  repeated Aktie aktie = 1;
  string param = 2;
  int32 depotID = 3;
  int32 antal = 4;
}

message AktieName{
  string name = 1;
}

message AktieResponse{
  string response = 1;
}

message allAktier{
  repeated Aktie aktier = 1;
}

message getAllAktier{
  string param = 1;
  int32 depotID = 2;
}

message getDepotFraID{
  int32 depotID = 1;
}

message DepotResponse{
  repeated Depot depoter = 1;
}

message Depot{
  int32 id = 1;
  string aktienavn = 2;
  int32 antal = 3;
  double pris = 4;
}

message Transaction{
  int32 transaktionID = 1;
  string username = 2;
  string aktienavn = 3;
  int32 antal = 4;
  int64 date = 5;
}

message AllTransactions{
  repeated Transaction transaktioner = 1;
}

message TransactionRequest{
  string username = 1;
}

service BrugerService{
  rpc createBruger(Bruger) returns (BrugerResponse);
  rpc getBruger(BrugerRequest) returns (Bruger);
  rpc handleAktie(AktieRequest) returns (AktieResponse);
  rpc loginBruger(BrugerRequest) returns (BrugerResponse);
  rpc getAktie(AktieName) returns (Aktie); 
  rpc getAll(getAllAktier) returns (allAktier);
  rpc handleBruger(BrugerRequest) returns (BrugerResponse);
  rpc getAllDepoter(getDepotFraID) returns (DepotResponse);
  rpc getAllTransactions(TransactionRequest) returns (AllTransactions);
}