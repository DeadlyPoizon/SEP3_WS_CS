@page "/Transactions"
@using GRPCService.LogicInterfaces
@using SydnetBlazor.Data
@using System.Security.Claims
@using Domain.Models
@using HttpClients.ClientInterfaces
@inject IBrugerLogic brugerLogic
@inject IAktieService aktieService

<h3>Transaktioner</h3>

<DataGrid TItem="Transaktion" Data="@transaktioner" Responsive ShowPager>
    <DataGridColumn Field="@nameof(Transaktion.ID)" Caption="TransaktionsID" Editable="false"></DataGridColumn>
    <DataGridColumn Field="@nameof(Transaktion.Aktienavn)" Caption="Aktienavn" Editable="false" Filterable="false"></DataGridColumn>
    <DataGridColumn Field="@nameof(Transaktion.antal)" Caption="Antal" Editable="false" Filterable="false"></DataGridColumn>
    <DataGridColumn Field="@nameof(Transaktion.Date)" Caption="Dato / Tid" Editable="false" Filterable="false"></DataGridColumn>
</DataGrid>


@code {

    private List<Transaktion> transaktioner;
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    public string? name = "";
    private IEnumerable<Claim>? userClaims;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthState;
            var user = authState.User;

            userClaims = user.Claims;
            name = user.Identity!.Name!;
            transaktioner = await aktieService.GetTransaktioner(name);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

  

}