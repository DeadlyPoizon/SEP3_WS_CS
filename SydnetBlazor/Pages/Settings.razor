@page "/Settings"
@using GRPCService.LogicInterfaces
@using HttpClients.ClientInterfaces
@using System.Security.Claims
@inject IBrugerLogic brugerLogic
@inject IUserService userService
<PageTitle>Indstillinger</PageTitle>

<h3>Indstillinger</h3>
<Row>
    <Column ColumnSize="ColumnSize.Is4">
        <Card Background="Background.Light">
            <CardHeader TextWeight="TextWeight.Bold">Nulstil fremskridt</CardHeader>
            <CardTitle Size="3" Padding="Padding.Is4.OnX.Is4.OnY">
                <Button onclick="@resetBruger" Color="Color.Danger">Nulstil fremskridt</Button>
            </CardTitle>
            <label style="color: green;text-align: center">
                        @errorLabel
                    </label>
        </Card>
    </Column>
    <Column ColumnSize="ColumnSize.Is4">
        <Card Background="Background.Light">
            <CardHeader TextWeight="TextWeight.Bold">Slet Konto</CardHeader>
            <CardTitle Size="3" Padding="Padding.Is4.OnX.Is4.OnY">
                <Button Color="Color.Danger">Slet Konto</Button>
            </CardTitle>
        </Card>
    </Column>
</Row>


@code {
    private string errorLabel;
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    public string? name = "";
    private IEnumerable<Claim>? userClaims;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthState;
            var user = authState.User;

            userClaims = user.Claims;
            name = user.Identity!.Name!;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

    private void resetBruger()
    {
        var depotId = brugerLogic.GetBruger(name!).Result.DepotID;
        userService.resetBruger(depotId);
        TopBar.saldo = 100000;
        errorLabel = "Konto Nulstillet";
    }

}